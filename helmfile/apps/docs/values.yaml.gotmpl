{{ $hostname := printf "%s.%s" .Values.global.hostname.docs .Values.global.domain }}

global:
  security:
    allowInsecureImages: true

  imagePullSecrets:
    - name: {{ (coalesce .Values.container.docs.imagePullSecret .Values.container.default.imagePullSecret) | quote }}

commonLabels:
  app.kubernetes.io/part-of: docs

clusterDomain: {{ .Values.cluster.networking.domain }}

backend:
  image:
    registry: {{(coalesce .Values.container.docs.registry .Values.container.default.registry) | quote }}
    repository: {{ .Values.container.docs.backend.repository | quote }}
    tag: {{ .Values.container.docs.backend.tag | quote }}
  replicaCount: 1
  resourcesPreset: {{ .Values.global.resourcesPreset | quote }}
  resources: {{ .Values.resource.docs.backend | toYaml | nindent 4 }}
  podSecurityContext: {{ .Values.security.default.podSecurityContext | toYaml | nindent 4 }}
  containerSecurityContext: {{ .Values.security.default.containerSecurityContext | toYaml | nindent 4 }}
  pdb:
    maxUnavailable: 1
  networkPolicy:
    extraEgress:
      # Database connectivity
      - ports:
          - port: {{ .Values.database.docs.port }}
            protocol: TCP
        {{- if .Values.database.docs.isInternal }}
        to:
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: postgresql
                app.kubernetes.io/component: primary
        {{- end }}
      # Redis connectivity
      - ports:
          - port: {{ .Values.cache.docs.port }}
            protocol: TCP
        {{- if .Values.cache.docs.isInternal }}
        to:
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: redis
                app.kubernetes.io/component: master
        {{- end }}
      # MinIO connectivity
      - ports:
          - port: {{ .Values.objectstore.docs.port }}
            protocol: TCP
        {{- if .Values.objectstore.grist.isInternal }}
        to:
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: minio
        {{- end }}
      # Allow https egress for keycloak connection
      - ports:
          - port: 443
      # Allow http egress for yProvider connection
      - ports:
          - port: 4444
  themeCustomization:
    enabled: true
    fileContent: |
      {
        "translations": {
            "en": {
              "translation": {
                "Docs": "Mijn Bureau Docs",
                "New doc": "+"
              }
            }
          },
        "footer": {
          "default": {
            "logo": {
              "src": "/assets/icon-docs.svg",
              "width": "54px",
              "alt": "Docs Logo",
              "withTitle": true
            },
            "externalLinks": [
              {
                "label": "GitHub",
                "href": "https://github.com/suitenumerique/docs/"
              },
              {
                "label": "DINUM",
                "href": "https://www.numerique.gouv.fr/dinum/"
              },
              {
                "label": "ZenDiS",
                "href": "https://zendis.de/"
              },
              {
                "label": "BlockNote.js",
                "href": "https://www.blocknotejs.org/"
              }
            ],
            "bottomInformation": {
              "label": "Unless otherwise stated, all content on this site is under",
              "link": {
                "label": "licence etalab-2.0",
                "href": "https://github.com/etalab/licence-ouverte/blob/master/LO.md"
              }
            }
          },
          "en": {
            "legalLinks": [
              {
                "label": "Legal Notice",
                "href": "#"
              },
              {
                "label": "Personal data and cookies",
                "href": "#"
              },
              {
                "label": "Accessibility",
                "href": "#"
              }
            ],
            "bottomInformation": {
              "label": "Unless otherwise stated, all content on this site is under",
              "link": {
                "label": "licence MIT",
                "href": "https://github.com/suitenumerique/docs/blob/main/LICENSE"
              }
            }
          },
          "fr": {
            "legalLinks": [
              {
                "label": "Mentions légales",
                "href": "#"
              },
              {
                "label": "Données personnelles et cookies",
                "href": "#"
              },
              {
                "label": "Accessibilité",
                "href": "#"
              }
            ],
            "bottomInformation": {
              "label": "Sauf mention contraire, tout le contenu de ce site est sous",
              "link": {
                "label": "licence MIT",
                "href": "https://github.com/suitenumerique/docs/blob/main/LICENSE"
              }
            }
          },
          "de": {
            "legalLinks": [
              {
                "label": "Impressum",
                "href": "#"
              },
              {
                "label": "Personenbezogene Daten und Cookies",
                "href": "#"
              },
              {
                "label": "Barrierefreiheit",
                "href": "#"
              }
            ],
            "bottomInformation": {
              "label": "Sofern nicht anders angegeben, steht der gesamte Inhalt dieser Website unter",
              "link": {
                "label": "licence MIT",
                "href": "https://github.com/suitenumerique/docs/blob/main/LICENSE"
              }
            }
          },
          "nl": {
            "legalLinks": [
              {
                "label": "Wettelijke bepalingen",
                "href": "#"
              },
              {
                "label": "Persoonlijke gegevens en cookies",
                "href": "#"
              },
              {
                "label": "Toegankelijkheid",
                "href": "#"
              }
            ],
            "bottomInformation": {
              "label": "Tenzij anders vermeld, is alle inhoud van deze site ondergebracht onder",
              "link": {
                "label": "licence MIT",
                "href": "https://github.com/suitenumerique/docs/blob/main/LICENSE"
              }
            }
          }
        }
      }"
  celery:
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    resourcesPreset: {{ .Values.global.resourcesPreset | quote }}
    resources: {{ .Values.resource.docs.celery | toYaml | nindent 6 }}
    podSecurityContext: {{ .Values.security.default.podSecurityContext | toYaml | nindent 6 }}
    containerSecurityContext: {{ .Values.security.default.containerSecurityContext | toYaml | nindent 6 }}
    networkPolicy:
      extraEgress:
        # Database connectivity
        - ports:
            - port: {{ .Values.database.docs.port }}
              protocol: TCP
          {{- if .Values.database.docs.isInternal }}
          to:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/name: postgresql
                  app.kubernetes.io/component: primary
          {{- end }}
        # Redis connectivity
        - ports:
            - port: {{ .Values.cache.docs.port }}
              protocol: TCP
          {{- if .Values.cache.docs.isInternal }}
          to:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/name: redis
                  app.kubernetes.io/component: master
          {{- end }}
        # MinIO connectivity
        - ports:
            - port: {{ .Values.objectstore.docs.port }}
              protocol: TCP
          {{- if .Values.objectstore.grist.isInternal }}
          to:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/name: minio
          {{- end }}

frontend:
  image:
    registry: {{(coalesce .Values.container.docs.registry .Values.container.default.registry) | quote }}
    repository: {{ .Values.container.docs.frontend.repository | quote }}
    tag: {{ .Values.container.docs.frontend.tag | quote }}
  replicaCount: 1
  resourcesPreset: {{ .Values.global.resourcesPreset | quote }}
  resources: {{ .Values.resource.docs.backend | toYaml | nindent 4 }}
  podSecurityContext: {{ .Values.security.default.podSecurityContext | toYaml | nindent 4 }}
  containerSecurityContext: {{ .Values.security.default.containerSecurityContext | toYaml | nindent 4 }}
  pdb:
    maxUnavailable: 1

yProvider:
  image:
    registry: {{(coalesce .Values.container.docs.registry .Values.container.default.registry) | quote }}
    repository: {{ .Values.container.docs.yProvider.repository | quote }}
    tag: {{ .Values.container.docs.yProvider.tag | quote }}
  replicaCount: 1
  resourcesPreset: {{ .Values.global.resourcesPreset | quote }}
  resources: {{ .Values.resource.docs.backend | toYaml | nindent 4 }}
  podSecurityContext: {{ .Values.security.default.podSecurityContext | toYaml | nindent 4 }}
  containerSecurityContext: {{ .Values.security.default.containerSecurityContext | toYaml | nindent 4 }}
  pdb:
    maxUnavailable: 1
  networkPolicy:
    extraEgress:
      # Database connectivity
      - ports:
          - port: {{ .Values.database.docs.port }}
            protocol: TCP
        {{- if .Values.database.docs.isInternal }}
        to:
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: postgresql
                app.kubernetes.io/component: primary
        {{- end }}
      # Redis connectivity
      - ports:
          - port: {{ .Values.cache.docs.port }}
            protocol: TCP
        {{- if .Values.cache.docs.isInternal }}
        to:
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: redis
                app.kubernetes.io/component: master
        {{- end }}
      # MinIO connectivity
      - ports:
          - port: {{ .Values.objectstore.docs.port }}
            protocol: TCP
        {{- if .Values.objectstore.grist.isInternal }}
        to:
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: minio
        {{- end }}
      # Allow https egress for backend connection
      - ports:
          - port: 443
  api:
    key: {{ .Values.application.docs.yProvider.key }}
  caches:
    keyPrefix: {{ now | unixEpoch | quote }}

ingress:
  enabled: true
  hostname: {{ $hostname }}
  ingressClassName: {{ .Values.cluster.ingress.className | quote }}
  annotations:
    {{- if .Values.cluster.ingress.annotations }}
    {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {{- else if eq .Values.cluster.ingress.type "haproxy-openshift" }}
    haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
    {{- end }}
  tls: {{ .Values.global.tls.enabled | default true }}
  selfSigned: {{ and .Values.global.tls.enabled .Values.global.tls.selfSigned | default false }}
  extraTls: {{ .Values.tls.docs | toYaml | nindent 4 }}

ingressAdmin:
  enabled: true
  hostname: {{ .Values.global.hostname.docs }}.{{ .Values.global.domain }}
  ingressClassName: {{ .Values.cluster.ingress.className | quote }}
  annotations:
    {{- if .Values.cluster.ingress.annotations }}
    {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {{- else if eq .Values.cluster.ingress.type "haproxy-openshift" }}
    haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
    {{- end }}
  tls: {{ .Values.global.tls.enabled | default true }}
  selfSigned: {{ and .Values.global.tls.enabled .Values.global.tls.selfSigned | default false }}
  extraTls: {{ .Values.tls.docs | toYaml | nindent 4 }}

ingressCollaborationApi:
  enabled: true
  hostname: {{ $hostname }}
  ingressClassName: {{ .Values.cluster.ingress.className | quote }}
  annotations:
    {{- if .Values.cluster.ingress.annotations }}
    {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {{- else if eq .Values.cluster.ingress.type "haproxy-openshift" }}
    haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
    {{- end }}
  tls: {{ .Values.global.tls.enabled | default true }}
  selfSigned: {{ and .Values.global.tls.enabled .Values.global.tls.selfSigned | default false }}
  extraTls: {{ .Values.tls.docs | toYaml | nindent 4 }}
ingressCollaborationWS:
  enabled: true
  hostname: {{ $hostname }}
  ingressClassName: {{ .Values.cluster.ingress.className | quote }}
  annotations:
    {{- if .Values.cluster.ingress.annotations }}
    {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/enable-websocket: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
    nginx.ingress.kubernetes.io/upstream-hash-by: $arg_room
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {{- else if eq .Values.cluster.ingress.type "haproxy-openshift" }}
    haproxy.router.openshift.io/timeout-tunnel: "86400"
    haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
    {{- end }}
  tls: {{ .Values.global.tls.enabled | default true }}
  selfSigned: {{ and .Values.global.tls.enabled .Values.global.tls.selfSigned | default false }}
  extraTls: {{ .Values.tls.docs | toYaml | nindent 4 }}

ingressCollaborationsApi:
  enabled: true
  hostname: {{ $hostname }}
  ingressClassName: {{ .Values.cluster.ingress.className | quote }}
  annotations:
    {{- if .Values.cluster.ingress.annotations }}
    {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/upstream-hash-by: $arg_room
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {{- else if eq .Values.cluster.ingress.type "haproxy-openshift" }}
    haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
    {{- end }}
  tls: {{ .Values.global.tls.enabled | default true }}
  selfSigned: {{ and .Values.global.tls.enabled .Values.global.tls.selfSigned | default false }}
  extraTls: {{ .Values.tls.docs | toYaml | nindent 4 }}

ingressMedia:
  enabled: true
  hostname: {{ $hostname }}
  ingressClassName: {{ .Values.cluster.ingress.className | quote }}
  annotations:
    {{- if .Values.cluster.ingress.annotations }}
    {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/auth-url: {{ printf "http%s://%s/api/v1.0/documents/media-auth/" ( ternary "s" "" .Values.global.tls.enabled ) $hostname }}
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization, X-Amz-Date, X-Amz-Content-SHA256"
    nginx.ingress.kubernetes.io/upstream-vhost: {{ printf "%s:%s" .Values.objectstore.docs.endpoint .Values.objectstore.docs.port }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Content-Security-Policy "default-src 'none'" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {{- else if eq .Values.cluster.ingress.type "haproxy-openshift" }}
    haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
    {{- end }}
  tls: {{ .Values.global.tls.enabled | default true }}
  selfSigned: {{ and .Values.global.tls.enabled .Values.global.tls.selfSigned | default false }}
  extraTls: {{ .Values.tls.docs | toYaml | nindent 4 }}

metrics: {{ .Values.monitoring.prometheus | toYaml | nindent 2 }}

collaboration:
  api:
    secret: {{ .Values.application.docs.collaboration.secret }}
  webSockets:
    notConnectedReadOnly: true

django:
  secretKey: {{ .Values.application.docs.django.secretKey }}
  superUser:
    email: {{ .Values.secret.docs.superUser.email }}
    password: {{ .Values.secret.docs.superUser.password }}
  email:
    brandName: "Mijn Bureau"
    host: {{ .Values.smtp.host }}
    # FIXME Apply Mijn Bureau branding
    logoImg: {{ printf "https://%s/assets/logo-suite-numerique.png" $hostname }}
    port: {{ .Values.smtp.port }}
    useSsl: {{ .Values.smtp.tls.enabled }}

auth:
  oidc:
    userInfo:
      shortNameField: {{ .Values.authentication.oidc.claims.given_name }}
      fullNameField: {{ .Values.authentication.oidc.claims.display_name }}
    openIdProvider:
      jwksEndpoint: {{ .Values.authentication.oidc.jwks_uri }}
      authorizationEndpoint: {{ .Values.authentication.oidc.authorization_endpoint }}
      tokenEndpoint: {{ .Values.authentication.oidc.token_endpoint }}
      userEndpoint: {{ .Values.authentication.oidc.userinfo_endpoint }}
      logoutEndpoint: {{ .Values.authentication.oidc.end_session_endpoint }}
    relyingParty:
      clientId: {{ .Values.authentication.client.docs.client_id }}
      clientSecret: {{ .Values.authentication.client.docs.client_secret }}
      signAlgo: {{ .Values.authentication.client.docs.sign_algorithm }}
      scopes: {{ .Values.authentication.client.docs.scopes }}

database:
  host: {{ .Values.database.docs.host }}
  port: {{ .Values.database.docs.port }}
  name: {{ .Values.database.docs.name }}
  user: {{ .Values.database.docs.user }}
  password: {{ .Values.database.docs.password }}

redis:
  url: {{ printf "redis://default:%s@%s:%d/1" .Values.cache.docs.password .Values.cache.docs.host .Values.cache.docs.port }}

awsS3:
  endpointUrl: {{ printf "http%s://%s:%d" ( ternary "s" "" .Values.objectstore.docs.useSSL ) .Values.objectstore.docs.endpoint .Values.objectstore.docs.port }}
  accessKeyId: {{ .Values.objectstore.docs.username }}
  secretAccessKey: {{ .Values.objectstore.docs.rootPassword }}
  storageBucketName: {{ .Values.objectstore.docs.bucket }}
