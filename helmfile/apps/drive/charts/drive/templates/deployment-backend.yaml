{{- /*

SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}-backend
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: drive-backend
  {{- if or .Values.drive.deploymentAnnotations .Values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" (dict "values" (list .Values.drive.deploymentAnnotations .Values.commonAnnotations) "context" .) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.drive.autoscaling.hpa.enabled }}
  replicas: {{ .Values.drive.replicaCount }}
  {{- end }}
  {{- if .Values.drive.updateStrategy }}
  strategy: {{- toYaml .Values.drive.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" (list .Values.drive.podLabels .Values.commonLabels) "context" .) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: drive-backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- if .Values.drive.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.drive.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: drive-backend
    spec:
      {{- include "drive.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ template "drive.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.drive.automountServiceAccountToken }}
      {{- if .Values.drive.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.drive.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.drive.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.drive.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.drive.podAffinityPreset "component" "drive" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.drive.podAntiAffinityPreset "component" "drive" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.drive.nodeAffinityPreset.type "key" .Values.drive.nodeAffinityPreset.key "values" .Values.drive.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.drive.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.drive.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.drive.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.drive.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.drive.priorityClassName }}
      priorityClassName: {{ .Values.drive.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.drive.schedulerName }}
      schedulerName: {{ .Values.drive.schedulerName | quote }}
      {{- end }}
      {{- if .Values.drive.runtimeClassName }}
      runtimeClassName: {{ .Values.drive.runtimeClassName | quote }}
      {{- end }}
      {{- if .Values.drive.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.drive.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.drive.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.drive.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.drive.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.drive.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        {{- if and .Values.defaultInitContainers.volumePermissions.enabled .Values.persistence.enabled }}
        {{- include "drive.defaultInitContainers.volumePermissions" (dict "context" . "component" "drive") | nindent 8 }}
        {{- end }}
        {{- if .Values.drive.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.drive.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: drive
          image: {{ template "drive.image" . }}
          imagePullPolicy: {{ .Values.drive.image.pullPolicy }}
          {{- if .Values.drive.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.drive.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.drive.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.drive.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.drive.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.drive.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.drive.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.drive.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "common.names.fullname" . }}
            {{- if .Values.drive.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.drive.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.drive.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.drive.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.drive.resources }}
          resources: {{- toYaml .Values.drive.resources | nindent 12 }}
          {{- else if ne .Values.drive.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.drive.resourcesPreset) | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.drive.containerPorts.http }}
            {{- if .Values.drive.extraContainerPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.drive.extraContainerPorts "context" $) | nindent 12 }}
            {{- end }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.drive.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.drive.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.drive.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.drive.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /__lbheartbeat__
              port:  {{ .Values.drive.containerPorts.http }}
          {{- end }}
          {{- if .Values.drive.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.drive.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.drive.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.drive.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /__lbheartbeat__
              port: {{ .Values.drive.containerPorts.http }}
          {{- end }}
          {{- if .Values.drive.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.drive.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.drive.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.drive.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /__lbheartbeat__
              port:  {{ .Values.drive.containerPorts.http }}
          {{- end }}
          {{- end }}
          {{- if .Values.drive.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.drive.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
          {{- if .Values.drive.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.drive.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.drive.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.drive.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        {{- if .Values.drive.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.drive.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
