# Default values for matrix-synapse.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

{{- /*
  $serverName is the name of the server in the Matrix ecosystem
  $hostName is the hostname the server is available at
  $clientHostName is the host the client is running on
*/ -}}
{{- $serverName := .Values.global.matrixDomain | default (printf "%s.%s" .Values.global.hostname.synapse .Values.global.domain) -}}
{{- $hostName := printf "%s.%s" .Values.global.hostname.synapse .Values.global.domain -}}
{{- $clientHostName := printf "%s.%s" .Values.global.hostname.element .Values.global.domain -}}

# Architecture can be monolith for a single node, or replication when using additional worker nodes for scaling.
# See https://element-hq.github.io/synapse/latest/workers.html
architecture: monolith

commonLabels:
  app.kubernetes.io/part-of: synapse

master:
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    registry: {{ coalesce .Values.container.synapse.registry .Values.container.default.registry | quote }}
    repository: {{ .Values.container.synapse.repository }}
    # This sets the pull policy for images.
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: {{ .Values.container.synapse.tag }}
    pullSecrets:
     - {{ coalesce .Values.container.synapse.imagePullSecret .Values.container.default.imagePullSecret | toYaml | nindent 8 }}
  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  resourcesPreset: {{ .Values.global.resourcesPreset | quote }}
  resources: {{ .Values.resource.synapse.master | toYaml | nindent 4 }}
  hpa: {{ .Values.autoscaling.horizontal.synapse.master | toYaml | nindent 6 }}
  vpa: {{ .Values.autoscaling.vertical.synapse.master | toYaml | nindent 6 }}
  startupProbe:
    enabled: true
    initialDelaySeconds: 15
  persistence:
    size: {{ coalesce .Values.pvc.synapse.synapse.size .Values.pvc.default.size "8Gi" }}
    storageClass: {{ coalesce .Values.pvc.synapse.synapse.storageClass .Values.pvc.default.storageClass | quote }}
  networkPolicy:
    extraIngress:
      # Allow traffic from ingress controller namespace
      - ports:
          - port: 8448
            protocol: TCP
    extraEgress:
      # Allow https egress for keycloak connection
      - ports:
          - port: 443
      {{- if .Values.cache.synapse }}
      - ports:
          - port: {{ .Values.cache.synapse.port }}
        to:
          - podSelector:
              matchLabels:
                app.kubernetes.io/instance: chat-redis
      {{- end }}
      {{- if eq .Values.database.synapse.type "psycopg2" }}
      - ports:
          - port: {{ .Values.database.synapse.port }}
        to:
          - podSelector:
              matchLabels:
                app.kubernetes.io/instance: chat-postgresql
      {{- end }}

# TODO replication is not functional
worker:

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  hostname: {{ $hostName }}
  extraTls: {{ .Values.tls.synapse | toYaml | nindent 4 }}
  ingressClassName: {{ .Values.cluster.ingress.ingressClassName | quote }}
  annotations: {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automountServiceAccountToken: false

# This section is for configuration of Synapse.
synapse:
  # Report statistics to Matrix.org
  reportStats:
    enabled: false
  # Logging configuration
  logging:
    logLevel: "INFO"
  # The name of the server in the Matrix ecosystem.
  serverName: {{ $serverName | quote }}
  # The location of the web client
  webClientLocation: {{ printf "https://%s" $clientHostName | quote }}
  # Database configuration
  database:
    name: {{ .Values.database.synapse.type | quote }}
    txnLimit: 10000
    args:
      {{- if eq .Values.database.synapse.type "sqlite3" }}
      database: "/synapse/data/homeserver.db"
      {{- else }}
      user: {{ .Values.database.synapse.user | quote }}
      password: {{ .Values.database.synapse.password | quote }}
      host: {{ .Values.database.synapse.host | quote }}
      port: {{ .Values.database.synapse.port }}
      {{- end }}
  # Allows registration of standard or admin accounts by anyone who has the shared secret, even if enable_registration is not set.
  registrationSharedSecret: {{ .Values.secret.synapse.registrationSharedSecret | quote }}
  # A secret which is used to calculate HMACs for form values, to stop falsification of values. Must be specified for the User Consent forms to work.
  formSecret: {{ .Values.secret.synapse.formSecret | quote }}
  # Disable the warning that is emitted when the trusted_key_servers include "matrix.org".
  suppressKeyServerWarning: true
  # Redis configuration
  redis:
    enabled: {{ not (empty .Values.cache.synapse) }}
    host: {{ .Values.cache.synapse.host | quote }}
    port: {{ .Values.cache.synapse.port }}
    password: {{ .Values.cache.synapse.password | quote }}
  # Database updates that are run in the background in batches.
  backgroundUpdates:
    # As we want our first launch and subsequent upgrades to go as fast
    # as possible don't sleep between background updates
    sleepEnabled: false
  # Email configuration
  email:
    smtp:
      host: {{ .Values.smtp.host | quote }}
      port: {{ .Values.smtp.port }}
      user: {{ .Values.smtp.username | quote }}
      pass: {{ .Values.smtp.password | quote }}
      tls:
        enabled: {{ .Values.smtp.tls.enabled }}
        force: {{ .Values.smtp.tls.force }}
        requireTransportSecurity: {{ .Values.smtp.tls.requireTransportSecurity }}
    notifs:
      from: {{ printf "Your %%(app)s homeserver <noreply@%s>" $serverName | quote }}
    clientBaseUrl: {{ printf "https://%s" $clientHostName | quote }}
    inviteClientLocation: {{ printf "https://%s" $clientHostName | quote }}
  # Options related to ratelimiting in Synapse.
  rateLimiting:
    # This is a ratelimiting option for messages that ratelimits sending based on the account the client is using.
    messaging:
      perSeconde: 0.5
      burstCount: 30.0
  # The maximum allowed duration by which sent events can be delayed, as per MSC4140.
  maxEventDelayDuration: "24h"
  # Redirect traffic to port 443 when server_name and hostname are identical and tls is enabled.
  serveServerWellknown: {{ and .Values.tls.synapse (eq $serverName $hostName ) }}
  # Avatar image settings
  avatar:
    maxSize: "10M"
    allowedMimeTypes: ["image/png", "image/jpeg"]
  # How long to keep locally forgotten rooms before purging them from the DB.
  forgottenRoomRetentionPeriod: "28d"
  # Message retention policy at the server level.
  retention:
    enabled: true
    defaultPolicy:
      lifetime:
        min: "1d"
        max: "1y"
    allowedLifetime:
      min: "1d"
      max: "1y"
  # Users who register on this homeserver will automatically be joined to the rooms listed under this option.
  autoJoinRooms: [{{ (printf "#%s:%s" "welkom" $serverName) | quote }}]
  # List of OpenID Connect (OIDC) / OAuth 2.0 identity providers, for registration and login.
  oidcProviders:
    - idp_id: mijnbureau
      idp_name: "MijnBureau authenticatie"
      discover: false
      issuer: {{ .Values.authentication.oidc.issuer | quote }}
      client_id: {{ .Values.authentication.client.synapse.client_id | quote }}
      client_secret: {{ .Values.authentication.client.synapse.client_secret | quote }}
      client_auth_method: client_secret_post
      scopes: ["openid", "profile"]
      authorization_endpoint: {{ .Values.authentication.oidc.authorization_endpoint | quote }}
      token_endpoint: {{ .Values.authentication.oidc.token_endpoint | quote }}
      userinfo_endpoint: {{ .Values.authentication.oidc.userinfo_endpoint | quote }}
      jwks_uri: {{ .Values.authentication.oidc.jwks_uri | quote }}
      user_mapping_provider:
        config:
          localpart_template: {{`'{{ (user.given_name ~ user.family_name) | replace('' '', '''') }}'`}}
          display_name_template: {{`'{{ user.name }}'`}}
          email_template: {{`'{{ user.email }}'`}}
  # Disable password configuration, we only allow OIDC
  passwordConfig:
    enabled: false
  # E2E any room created with the private_chat or trusted_private_chat room creation presets.
  encryptionEnabledByDefaultForRoomType: "invite"
  # Options related to the user directory, allowing to search through all users and prefer local ones.
  userDirectory:
    searchAllUsers: true
    preferLocalUsers: true
  # Automatically accepting invites controls whether users are presented with an invite request or if
  # they are instead automatically joined to a room when receiving an invite.
  autoAcceptInvites:
    enabled: true
    onlyForDirectMessages: true
    onlyFromLocalUsers: true
  experimentalFeatures:
    # MSC3266: Room summary API. Used for knocking over federation
    msc3266_enabled: true
    # MSC4222 needed for syncv2 state_after. This allows clients to correctly track the state of the room.
    msc4222_enabled: true
