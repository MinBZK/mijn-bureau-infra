architecture: "standalone"

global:
  imageRegistry: {{(coalesce .Values.container.redis.registry .Values.container.default.registry) | quote }}

  security:
    allowInsecureImages: true

  imagePullSecrets:
    - name: {{ (coalesce .Values.container.redis.imagePullSecret .Values.container.default.imagePullSecret)  | quote }}

commonLabels:
  app.kubernetes.io/part-of: synapse

image:
  registry: {{(coalesce .Values.container.redis.registry .Values.container.default.registry) | quote }}
  pullPolicy: Always

resourcesPreset: {{ .Values.global.resourcesPreset | quote }}


auth:
  enabled: true
  password: {{ .Values.cache.synapse.password | quote }}

master:
  containerSecurityContext: {{ .Values.security.default.containerSecurityContext | toYaml | nindent 4 }}
  podSecurityContext: {{ .Values.security.default.podSecurityContext | toYaml | nindent 4 }}
  persistence:
    storageClass: {{ coalesce .Values.pvc.redis.storageClass .Values.pvc.default.storageClass | quote }}
    size: {{ coalesce .Values.pvc.redis.size .Values.pvc.default.size | quote }}
  service:
    ports:
      redis: {{ .Values.cache.synapse.port }}

networkPolicy:
  enabled: true
  # Only allow connections from within the namespace
  allowExternal: false
  # Redis doesn't need external internet access
  allowExternalEgress: false
  # Allow connections from Synapse pods
  extraIngress:
    - ports:
        - port: {{ .Values.cache.synapse.port }}
          protocol: TCP
      from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: synapse
  metrics:
    allowExternal: false
